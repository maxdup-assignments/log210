// Generated by CoffeeScript 1.8.0
(function() {
  angular.module('resto.restoControllers', []).controller('RestaurantController', function($scope, $location, $http, Resto) {
    var assign_selection;
    $scope.restos = [];
    if ($location.path() === '/admin/resto') {
      $scope.new_resto = {
        'name': '',
        'menu': {},
        'user': ''
      };
      $scope.options = [
        {
          'label': 'None',
          'value': ''
        }
      ];
      $scope.selected_staff = '';
      $http.get('http://127.0.0.1:8000/api/all_staff').success(function(data) {
        var user, _i, _len;
        for (_i = 0, _len = data.length; _i < _len; _i++) {
          user = data[_i];
          $scope.options.push({
            'label': user.email,
            'value': user.pk
          });
        }
        $scope.selected_staff = $scope.options[0];
        return $scope.new_resto.user = $scope.selected_staff.value;
      });
      assign_selection = function(resto) {
        var option, _i, _len, _ref, _results;
        if (resto.user) {
          _ref = $scope.options;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            option = _ref[_i];
            if (option.value === resto.user.pk) {
              _results.push(resto.new_user = option);
            }
          }
          return _results;
        } else {
          return resto.new_user = $scope.options[0];
        }
      };
      Resto.query().$promise.then(function(value) {
        var resto, _i, _len, _ref, _results;
        $scope.restos = value;
        _ref = $scope.restos;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          resto = _ref[_i];
          _results.push(assign_selection(resto));
        }
        return _results;
      });
      $scope.create_resto = function() {
        if (!$scope.new_resto.user) {
          alert("il est préferable d'assigner un restaurateur");
        }
        return Resto.save($scope.new_resto).$promise.then(function(value) {
          assign_selection(data);
          $scope.restos.push(data);
          return $scope.new_resto = {
            'name': '',
            'menu': {},
            'user': ''
          };
        });
      };
    } else {
      $scope.$on('profileload', function() {
        return $scope.restos = Resto.query({
          user: $scope.profile.user.pk
        });
      });
    }
    $scope.edit_resto = function(resto) {
      resto.backup = _.clone(resto);
      resto.backup.user = _.clone(resto.user);
      if (assign_selection) {
        assign_selection(resto);
      }
      return console.log(resto);
    };
    $scope.save_resto = function(resto) {
      if (resto.user && resto.new_user && resto.new_user.value === resto.user.pk) {
        delete resto['new_user'];
      }
      delete resto['backup'];
      return Resto.update({
        id: resto.pk
      }, resto).$promise.then(function(value) {
        _.extend(resto, value);
        console.log(value);
        if (!value.user) {
          return alert("il est préferable d'assigner un restaurateur");
        }
      });
    };
    $scope.cancel_resto = function(resto) {
      _.extend(resto, resto.backup);
      delete resto['backup'];
      return delete resto['new_user'];
    };
    return $scope.delete_resto = function(resto) {
      return Resto["delete"]({
        id: resto.pk
      }).$promise.then(function(value) {
        return $scope.restos = _.without($scope.restos, resto);
      });
    };
  });

}).call(this);
